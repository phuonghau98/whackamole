{"version":3,"sources":["Mole.js","App.js","serviceWorker.js","index.js","img/mole.svg","img/dirt.svg","sound/gameplay.mp3","img/firework.gif","sound/congratulations.mp3"],"names":["Mole","addScore","isUp","style","height","width","marginTop","position","overflow","src","mole","className","alt","onClick","dirt","App","useState","moleUpIndex","setMoleupIndex","gameDaBatDau","setGameBatDau","score","setScore","audioRef","useRef","congratsSoundRef","batdaugame","useCallback","a","i","delay","fn","Promise","resolve","reject","randomSecond","Math","floor","random","setTimeout","randomIndex","useEffect","current","play","pause","currentTime","background","ref","gameplaySoundFX","congratulationSoundFX","textAlign","transform","top","left","fontFamily","fontSize","display","justifyContent","flexWrap","margin","title","centered","visible","onCancel","okText","cancelText","onOk","firework","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f2d369db.chunk.js","sourcesContent":["// Buoc 1: Nap thu vien\nimport React from 'react'\nimport mole from './img/mole.svg'\nimport dirt from './img/dirt.svg'\n\n// Buoc 2: Khai bao doi tuong\nconst Mole = ({ addScore, isUp }) => {\n    return (\n        <div style={{\n            height: 300,\n            width: 250,\n            marginTop: 15,\n            position: 'relative',\n            overflow: 'hidden'\n        }}>\n            {/* Con chuot */}\n            <img\n                src={mole}\n                className={`mole ${isUp ? 'up' : ''}`}\n                alt='foo'\n                onClick={() => addScore()}\n            />\n            {/* Dam dat */}\n            <img src={dirt} className='dirt' alt='bar' />\n        </div>\n    )\n}\n\n// Buoc 3: Xuat doi tuong\nexport default Mole","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './App.css';\nimport Mole from './Mole';\nimport gameplaySoundFX from './sound/gameplay.mp3'\nimport { Modal, Button } from 'antd'\nimport firework from './img/firework.gif'\nimport congratulationSoundFX from './sound/congratulations.mp3'\n\nfunction App() {\n  const [moleUpIndex, setMoleupIndex] = useState(-1)\n  const [gameDaBatDau, setGameBatDau] = useState(false)\n  const [score, setScore] = useState(0)\n\n  const audioRef = useRef()\n  const congratsSoundRef = useRef()\n\n  const batdaugame = useCallback(async ()  => {\n    for (let i = 0; i < 20; i++) {\n      await delay(setMoleupIndex)\n    }\n    setGameBatDau(false)\n  }, [])\n\n  function addScore () {\n    setScore(score + 1)\n  }\n\n  const delay = async (fn) => {\n    return new Promise((resolve, reject) => {\n      const randomSecond = Math.floor(Math.random() * (700 - 200 + 1) + 200 )\n      setTimeout(() => {\n        const randomIndex = Math.floor(Math.random() * 6)\n        fn(randomIndex)\n        resolve(true)\n      }, randomSecond)\n    })\n  }\n\n  useEffect(() => {\n    if (score !== 0 && !gameDaBatDau) {\n      congratsSoundRef.current.play()\n    } \n  }, [score, gameDaBatDau])\n\n  useEffect(() => {\n    if (gameDaBatDau) {\n      batdaugame()\n      audioRef.current.play()\n    } else {\n      setMoleupIndex(-1)\n      if (audioRef.current) {\n        audioRef.current.pause()\n        audioRef.current.currentTime = 0\n      }\n    }\n  }, [gameDaBatDau, batdaugame])\n  return (\n    <div style={{\n      background: '#e5dd40',\n      height: '100vh',\n      overflow: 'hidden'\n    }}>\n      <audio ref={audioRef} src={gameplaySoundFX} />\n      <audio ref={congratsSoundRef} src={congratulationSoundFX} />\n      <div style={{\n            textAlign: 'center',\n            transform: 'translate(-50%, -50%)',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n      }}>\n        <h1 style={{\n          fontFamily: 'Srisakdi, cursive',\n          fontSize: '5em',\n          textAlign: 'center'\n        }}>Whack a mole :) </h1>\n        {!gameDaBatDau && score === 0 && <Button style={{ fontSize: '2em', width: 200, height: 80 }} onClick={() => setGameBatDau(true)}>Start</Button>}\n        {gameDaBatDau && <h2>Score: {score}</h2> }\n        <div\n        className='game-wrapper'\n        style={{\n          display: 'flex',\n          width: 800,\n          justifyContent: \"space-around\",\n          flexWrap: 'wrap',\n          margin: '0 auto'\n        }}>\n          { gameDaBatDau && (\n            <>\n          <Mole addScore={addScore} isUp={moleUpIndex === 0} />\n          <Mole addScore={addScore} isUp={moleUpIndex === 1} />\n          <Mole addScore={addScore} isUp={moleUpIndex === 2} />\n          <Mole addScore={addScore} isUp={moleUpIndex === 3} />\n          <Mole addScore={addScore} isUp={moleUpIndex === 4} />\n          <Mole addScore={addScore} isUp={moleUpIndex === 5} />\n          </>\n          )}\n        </div>\n        <Modal\n          title=\"Congratulations\"\n          centered\n          visible={score !== 0 && !gameDaBatDau }\n          // visible={true}\n          onCancel={() => {\n            setGameBatDau(false)\n            setScore(0)\n          }}\n          okText='Play again'\n          cancelText='Cancel'\n          onOk={() => {\n            setGameBatDau(true)\n            setScore(0)\n          }}\n        >\n          <p>Congratulations, your score is: {score}</p>\n          <img src={firework} style={{ position: 'absolute' }} alt='firework' />\n        </Modal>\n        <h2 style={{ marginTop: 20 }}>Developed by Someone</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mole.33f3e860.svg\";","module.exports = __webpack_public_path__ + \"static/media/dirt.938a0913.svg\";","module.exports = __webpack_public_path__ + \"static/media/gameplay.3a50daea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/firework.53b9feb9.gif\";","module.exports = __webpack_public_path__ + \"static/media/congratulations.44ceb7e0.mp3\";"],"sourceRoot":""}